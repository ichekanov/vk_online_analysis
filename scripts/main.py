# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sys
from datetime import datetime
sys.path.append('../')

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtSql import QSqlDatabase, QSqlTableModel  # Работа с бд

from ui.dialog1 import Ui_Dialog as Ui_Dialog1
from ui.dialog2 import Ui_Dialog as Ui_Dialog2
from ui.TextReport2 import TextReport2
from ui.TextReport1 import TextReport1
from ui.Graphs import GraphWidget

from graphs.graph_scatter import graph_scatter
from graphs.graph_histogram_sessions import graph_histogram_sessions
from graphs.graph_bars_accumulated import graph_bars_accumulated
from graphs.graph_boxplot_daily import graph_boxplot_daily
from graphs.graph_daily_activity import graph_daily_activity
from graphs.graph_line_online_counter import graph_line_online_counter

from utils.find_sessions_by_period import find_sessions_by_period


def deleteItemsOfLayout(layout):  # TODO: delete if not necessary
    if layout is not None:
        while layout.count():
            item = layout.takeAt(0)
            widget = item.widget()
            if widget is not None:
                widget.setParent(None)
            else:
                deleteItemsOfLayout(item.layout())

class Ui_MainWindow(object):

    def Report1(self):
        self.textReport1 = TextReport1(self.ui1.selected_users,self.ui1.dateEdit.dateTime().toPyDateTime(), self.ui1.dateEdit_2.dateTime().toPyDateTime(), self.connection)
        self.textReport1.resizeColumnsToContents()
        self.scrollArea.setWidget(self.textReport1)

    def Report2(self):
        sessions = find_sessions_by_period(self.ui1.dateEdit.dateTime().toPyDateTime(), self.ui1.dateEdit_2.dateTime().toPyDateTime())  # TODO: из-за изменившейся структуры теперь можно перенести в textReport2
        self.textReport2 = TextReport2(sessions, self.connection)
        self.textReport2.resizeColumnsToContents()
        self.scrollArea.setWidget(self.textReport2)

    def Report3(self):
        tmp = QtWidgets.QLabel()
        tmp.setText("Здесь будет список студентов, но нужен ли он?")
        self.scrollArea.setWidget(tmp)

    def Graph1(self):
        w = GraphWidget(graph_bars_accumulated(self.ui2.selected_users, self.ui2.dateEdit.dateTime().toPyDateTime(), self.ui2.dateEdit_2.dateTime().toPyDateTime()))
        self.scrollArea_2.setLayout(w.layout)
        self.scrollArea_2.layout().deleteLater()  # Удаление слоёв работает ооочень странно, но работает если удалять стразу после создания
        # TODO: Придумать как удалять слой перед созданием нового чтобы график мог изменяться в размерах вместе с окном

    def Graph2(self):
        w = GraphWidget(graph_boxplot_daily(self.ui2.selected_users, self.ui2.dateEdit.dateTime().toPyDateTime(), self.ui2.dateEdit_2.dateTime().toPyDateTime()))
        self.scrollArea_2.setLayout(w.layout)
        self.scrollArea_2.layout().deleteLater()  # Удаление слоёв работает ооочень странно, но работает если удалять стразу после создания

    def Graph3(self):
        t = list(self.ui2.selected_users)
        if type(t) == type([]):
            t = t[0]  # Тут проверка на одного пользователя
        w = GraphWidget(graph_daily_activity(t, self.ui2.dateEdit.dateTime().toPyDateTime(), self.ui2.dateEdit_2.dateTime().toPyDateTime()))
        self.scrollArea_2.setLayout(w.layout)
        self.scrollArea_2.layout().deleteLater()  # Удаление слоёв работает ооочень странно, но работает если удалять стразу после создания

    def Graph4(self):
        w = GraphWidget(graph_histogram_sessions(self.ui2.dateEdit.dateTime().toPyDateTime(), self.ui2.dateEdit_2.dateTime().toPyDateTime()))
        self.scrollArea_2.setLayout(w.layout)
        self.scrollArea_2.layout().deleteLater()  # Удаление слоёв работает ооочень странно, но работает если удалять стразу после создания

    def Graph5(self):
        w = GraphWidget(graph_line_online_counter(self.ui2.dateEdit.dateTime().toPyDateTime(), self.ui2.dateEdit_2.dateTime().toPyDateTime()))
        self.scrollArea_2.setLayout(w.layout)
        self.scrollArea_2.layout().deleteLater()  # Удаление слоёв работает ооочень странно, но работает если удалять стразу после создания

    def Graph6(self):
        w = GraphWidget(graph_scatter(self.ui2.dateEdit.dateTime().toPyDateTime(), self.ui2.dateEdit_2.dateTime().toPyDateTime()))
        self.scrollArea_2.setLayout(w.layout)
        self.scrollArea_2.layout().deleteLater()  # Удаление слоёв работает ооочень странно, но работает если удалять стразу после создания


    def dialog1ButtonClicked(self):
        self.dialog1.show()
        self.dialog1.exec()
        if self.dialog1.result() == 1:
            if self.ui1.radioButton_2.isChecked():
                self.Report1()
            if self.ui1.radioButton_3.isChecked():
                self.Report2()
            if self.ui1.radioButton.isChecked():
                self.Report3()

    def dialog2ButtonClicked(self):
        self.dialog2.show()
        self.dialog2.exec()
        if self.dialog2.result() == 1:
            if self.ui2.radioButton_2.isChecked():
                self.Graph1()  # Столбчатый график активности
            if self.ui2.radioButton_5.isChecked():
                self.Graph2()  # Бокс-Уискер
            if self.ui2.radioButton_6.isChecked():
                self.Graph3()  # Активность в течении одного для для пользователя
            if self.ui2.radioButton_8.isChecked():
                self.Graph4()  # Гистограмма
            if self.ui2.radioButton_7.isChecked():
                self.Graph5()  # График кол-ва пользователей в сети
            if self.ui2.radioButton.isChecked():
                self.Graph6()  # Диаграмма рассеивания
            if self.ui2.radioButton_3.isChecked():
                self.Graph7()  # Сравнение среднего времени по платформам
            if self.ui2.radioButton_4.isChecked():
                self.Graph8()  # Средняя длительность сессий по часам


    def addRecordBtnClicked(self):
        if self.tabWidget_2.currentIndex() == 0:
            r = self.model1.record()
            r.setValue("name", "Username_" + str(self.model1.rowCount() + 1))
            r.setValue("vk_id", self.model1.rowCount() + 1)
            r.setValue("university_group", None)
            self.model1.insertRecord(-1, r)
            self.model1.select()
        elif self.tabWidget_2.currentIndex() == 1:
            r = self.model2.record()
            r.setValue("slug", "SLUG_" + str(self.model2.rowCount()+1))
            r.setValue("description", "SLUG_DESCRIPTION")
            self.model2.insertRecord(-1, r)
            self.model2.select()
        elif self.tabWidget_2.currentIndex() == 2:
            r = self.model3.record()
            r.setValue("user_id", 0)
            time = QtCore.QDateTime.currentDateTime()
            r.setValue("session_start", time)
            r.setValue("session_end", time)
            r.setValue("platform_id", 0)
            self.model3.insertRecord(-1, r)
            self.model3.select()


    def dataBases(self, MainWindow):
        self.connection = QSqlDatabase.addDatabase("QSQLITE")
        self.connection.setDatabaseName("..\data\project.db")
        self.connection.open()

        self.model1 = QSqlTableModel(MainWindow)
        self.model1.setTable("user")
        self.model1.setEditStrategy(QSqlTableModel.OnFieldChange)
        self.model1.setHeaderData(0, QtCore.Qt.Horizontal, "id")
        self.model1.setHeaderData(1, QtCore.Qt.Horizontal, "Name")
        self.model1.setHeaderData(2, QtCore.Qt.Horizontal, "VK id")
        self.model1.setHeaderData(3, QtCore.Qt.Horizontal, "Group")
        self.model1.select()


        self.tab_4 = QtWidgets.QTableView()
        self.tab_4.setModel(self.model1)
        self.tab_4.resizeColumnsToContents()
        self.tab_4.setColumnWidth(2,100)
        self.tab_4.setColumnWidth(3, 100)

        self.model2 = QSqlTableModel(MainWindow)
        self.model2.setTable("platform")
        self.model2.setEditStrategy(QSqlTableModel.OnFieldChange)
        self.model2.setHeaderData(0, QtCore.Qt.Horizontal, "id")
        self.model2.setHeaderData(1, QtCore.Qt.Horizontal, "Slug")
        self.model2.setHeaderData(2, QtCore.Qt.Horizontal, "Description")
        self.model2.select()

        self.tab_5 = QtWidgets.QTableView()
        self.tab_5.setModel(self.model2)
        self.tab_5.resizeColumnsToContents()

        self.model3 = QSqlTableModel(MainWindow)
        self.model3.setTable("activity")
        self.model3.setEditStrategy(QSqlTableModel.OnFieldChange)
        self.model3.setHeaderData(0, QtCore.Qt.Horizontal, "id")
        self.model3.setHeaderData(1, QtCore.Qt.Horizontal, "User id")
        self.model3.setHeaderData(2, QtCore.Qt.Horizontal, "Session start")
        self.model3.setHeaderData(3, QtCore.Qt.Horizontal, "Session end")
        self.model3.setHeaderData(4, QtCore.Qt.Horizontal, "Platform id")
        self.model3.select()

        self.tab_6 = QtWidgets.QTableView()
        self.tab_6.setModel(self.model3)
        self.tab_6.sortByColumn(0, QtCore.Qt.DescendingOrder)  # Qt.DescendingOrder Qt.AscendingOrder
        self.tab_6.resizeColumnsToContents()


    def setupUi(self, MainWindow):
        self.dataBases(MainWindow)

        self.GraphLayout = None

        self.dialog1 = QtWidgets.QDialog()
        self.ui1 = Ui_Dialog1()
        self.ui1.setupUi(self.dialog1, self, self.connection)

        self.dialog2 = QtWidgets.QDialog()
        self.ui2 = Ui_Dialog2()
        self.ui2.setupUi(self.dialog2, self, self.connection)

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(775, 652)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab)
        self.tabWidget_2.setObjectName("tabWidget_2")
        # self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tabWidget_2.addTab(self.tab_4, "")
        # self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tabWidget_2.addTab(self.tab_5, "")
        # self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.tabWidget_2.addTab(self.tab_6, "")
        self.verticalLayout_2.addWidget(self.tabWidget_2)
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.addRecordBtnClicked)  # Установка триггера кнопки
        self.verticalLayout_2.addWidget(self.pushButton)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tab_2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.scrollArea = QtWidgets.QScrollArea(self.tab_2)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 630, 442))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_7.addWidget(self.scrollArea)
        self.verticalLayout_5.addLayout(self.verticalLayout_7)
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_2)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.dialog1ButtonClicked)  # Установка триггера кнопки
        self.verticalLayout_5.addWidget(self.pushButton_2)
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.scrollArea_2 = QtWidgets.QScrollArea(self.tab_3)
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 630, 442))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_3)
        self.verticalLayout_8.addWidget(self.scrollArea_2)
        self.verticalLayout_4.addLayout(self.verticalLayout_8)
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.dialog2ButtonClicked)  # Установка триггера кнопки
        self.verticalLayout_4.addWidget(self.pushButton_3)
        self.tabWidget.addTab(self.tab_3, "")
        self.horizontalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 775, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        MainWindow.setMenuBar(self.menubar)
        self.action = QtWidgets.QAction(MainWindow)
        self.action.setObjectName("action")
        self.action_2 = QtWidgets.QAction(MainWindow)
        self.action_2.setObjectName("action_2")
        self.action_3 = QtWidgets.QAction(MainWindow)
        self.action_3.setObjectName("action_3")
        self.action_5 = QtWidgets.QAction(MainWindow)
        self.action_5.setObjectName("action_5")
        self.action_7 = QtWidgets.QAction(MainWindow)
        self.action_7.setObjectName("action_7")
        self.action_8 = QtWidgets.QAction(MainWindow)
        self.action_8.setObjectName("action_8")
        self.action_10 = QtWidgets.QAction(MainWindow)
        self.action_10.setObjectName("action_10")
        self.menu.addAction(self.action)
        self.menu.addSeparator()
        self.menu.addAction(self.action_7)
        self.menu_2.addAction(self.action_3)
        self.menu_2.addSeparator()
        self.menu_2.addAction(self.action_5)
        self.menu_3.addAction(self.action_8)
        self.menu_3.addSeparator()
        self.menu_3.addAction(self.action_10)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "Пользователи"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_5), _translate("MainWindow", "Платформы"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_6), _translate("MainWindow", "Активность"))
        self.pushButton.setText(_translate("MainWindow", "Добавить новую строку"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Просмотр/редактирование DB"))
        self.pushButton_2.setText(_translate("MainWindow", "Сгенерировать"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Демонстрация отчета"))
        self.pushButton_3.setText(_translate("MainWindow", "Построить"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Демонстрация графиков"))
        self.menu.setTitle(_translate("MainWindow", "Файл"))
        self.menu_2.setTitle(_translate("MainWindow", "Отчет"))
        self.menu_3.setTitle(_translate("MainWindow", "График"))
        self.action.setText(_translate("MainWindow", "Открыть"))
        self.action_2.setText(_translate("MainWindow", "сохранить"))
        self.action_3.setText(_translate("MainWindow", "Сгенерировать"))
        self.action_5.setText(_translate("MainWindow", "Сохранить"))
        self.action_7.setText(_translate("MainWindow", "Сохранить"))
        self.action_8.setText(_translate("MainWindow", "Построить"))
        self.action_10.setText(_translate("MainWindow", "Сохранить"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
